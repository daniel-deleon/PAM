#!/usr/bin/env python
__author__    = 'Danelle Cline'
__copyright__ = '2016'
__license__   = 'GPL v3'
__contact__   = 'dcline at mbari.org'
__doc__ = '''

Runs transfer learning tests on spectrogram images from the MBARI hydrophone
@var __date__: Date of last svn commit
@undocumented: __doc__ parser
@status: production
@license: GPL
'''

import os
import subprocess

if __name__ == '__main__':
    options = '--learning_rate .01 --random_crop 20'
    prefix = ['BlueWhaleD']  # ''FinWhale', 'BlueWhaleB']
    base_directory = '/Volumes/PAM_Analysis/BatchDetections/BLED'
    #base_directory = '/Volumes/PAM_Analysis/TestData/'
    model_dir = {}
    exemplar_dir = '/Volumes/PAM_Analysis/TrainingData/exemplars/'
    model_dir['BlueWhaleD'] = '/Volumes/PAM_Analysis/Classifiers/InceptionV3/models/BlueWhaleD/01/'
    model_dir['BlueWhaleB'] = '/Volumes/PAM_Analysis/Classifiers/InceptionV3/models/BlueWhaleBUpdate/04_lines_unk'
    model_dir['FinWhale'] = '/Volumes/PAM_Analysis/Classifiers/InceptionV3/models/FinWhaleUpdate/03_lines_blue_unk'

    years = range(2015, 2017)
    months = range(8, 12)
    prefix = 'BlueWhaleD'
    for y in years:
      for m in months:
        # image directory where cropped images are located
        image_dir = '{0}/{1}/{2}/{3:02}/spectrogram_raw/'.format(base_directory, prefix, y, m)

        # This is the directory the bottleneck features are generated; bottleneck features are generated by running each image through
        # the inception model. Once these are generated, they are cached.
        bottleneck_dir = '{0}/{1}/bottlenecks'.format(base_directory, prefix)

        # directory where predicted output should be stored
        predict_dir = '{0}/{1}/{2}/{3:02}/predictions'.format(base_directory, prefix, y, m)

        # add in any additional options here
        options = ' --prediction_dir {0} --input_dir {1} --bottleneck_dir {2} --model_dir {3} --exemplar_dir {4}'.format(predict_dir,
                                                                                                    image_dir,
                                                                                                    bottleneck_dir,
                                                                                                    model_dir[prefix],
                                                                                                    exemplar_dir)
        cmd = 'python ./predict.py {0}'.format(options)
        print(cmd)
        subproc = subprocess.Popen(cmd, env=os.environ, shell=True)
        subproc.communicate()

    '''for m in months:
        for p in prefix:
            # image directory where cropped images are located
            image_dir = '{0}/{1}/2015/{2:02}/spectrogram'.format(base_directory, p, m)

            # This is the directory the bottleneck features are generated; bottleneck features are generated by running each image through
            # the inception model. Once these are generated, they are cached.
            bottleneck_dir = '{0}/{1}/bottlenecks'.format(base_directory, p)

            # directory where predicted output should be stored
            predict_dir = '{0}/{1}/2015/{2:02}/predictions'.format(base_directory, p, m)

            # add in any additional options here
            options = ' --prediction_dir {0} --input_dir {1} --bottleneck_dir {2} --model_dir {3} --exemplar_dir {4}''.format(predict_dir,
                                                                                                        image_dir,
                                                                                                        bottleneck_dir,
                                                                                                        model_dir[p],
                                                                                                        exemplar_dir)

            cmd = 'python ./predict.py {0}'.format(options)
            print(cmd)
            subproc = subprocess.Popen(cmd, env=os.environ, shell=True)
            subproc.communicate()'''

    exit(-1)

    months = [8, 9, 11]

    for m in months:
        for p in prefix:
            # image directory where cropped images are located
            image_dir = '{0}/{1}/2016/{2:02}/spectrogram'.format(base_directory, p, m)

            # This is the directory the bottleneck features are generated; bottleneck features are generated by running each image through
            # the inception model. Once these are generated, they are cached.
            bottleneck_dir = '{0}/{1}/bottlenecks'.format(base_directory, p)

            # directory where predicted output should be stored
            predict_dir = '{0}/{1}/2016/{2:02}/predictions'.format(base_directory, p, m)

            # add in any additional options here
            options = ' --prediction_dir {0} --input_dir {1} --bottleneck_dir {2} --model_dir {3}'.format(predict_dir,
                                                                                                          image_dir,
                                                                                                          bottleneck_dir,
                                                                                                          model_dir[p])

            cmd = 'python ./predict.py {0}'.format(options)
            print(cmd)
            subproc = subprocess.Popen(cmd, env=os.environ, shell=True)
            subproc.communicate()
    print('Done')
